// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramBotHelper.DbContexts;

#nullable disable

namespace TelegramBotHelper.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230602094341_InitNewDatabase")]
    partial class InitNewDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TelegramBotHelper.Models.BlacklistOfWords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("WordsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("_BlacklistOfWords");
                });

            modelBuilder.Entity("TelegramBotHelper.Models.CommandsName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("_CommandsName");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommandName = "/addblacklist"
                        },
                        new
                        {
                            Id = 2,
                            CommandName = "/wordsinfo"
                        },
                        new
                        {
                            Id = 3,
                            CommandName = "/deleteword"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
